# Virtual Try-On Studio - Environment Configuration
# Copy this file to .env.local and fill in your API keys

# ===================================
# REQUIRED: AI SERVICES
# ===================================

# Google Gemini API Key (Required)
# Get your key from: https://ai.google.dev/
GEMINI_API_KEY=your_gemini_api_key_here

# ===================================
# AR/3D CONFIGURATION
# ===================================

# Camera and AR settings
VITE_CAMERA_RESOLUTION=1280x720
VITE_AR_QUALITY=high
VITE_ENABLE_SIZE_DETECTION=true
VITE_BODY_TRACKING_PRECISION=high

# 3D rendering settings
VITE_WEBGL_VERSION=2
VITE_ENABLE_SHADOWS=true
VITE_RENDER_QUALITY=high
VITE_FPS_TARGET=60

# Physics simulation
VITE_CLOTH_PHYSICS_ENABLED=true
VITE_GRAVITY_STRENGTH=9.8
VITE_WIND_SIMULATION=false

# ===================================
# APPLICATION CONFIGURATION
# ===================================

# Application settings
VITE_APP_NAME=Virtual Try-On Studio
VITE_NODE_ENV=development

# E-commerce integration
VITE_ENABLE_ECOMMERCE=true
VITE_SIZE_RECOMMENDATION_ENGINE=true
VITE_STYLE_MATCHING=true

# ===================================
# GARMENT CONFIGURATION
# ===================================

# Supported garment types
VITE_SUPPORTED_CATEGORIES=tops,bottoms,dresses,accessories
VITE_MAX_GARMENTS_SIMULTANEOUS=3
VITE_GARMENT_PHYSICS_QUALITY=medium

# Size calculation
VITE_MEASUREMENT_PRECISION=mm
VITE_SIZE_CONFIDENCE_THRESHOLD=0.8
VITE_AUTO_SIZE_ADJUSTMENT=true

# ===================================
# PERFORMANCE SETTINGS
# ===================================

# Rendering optimization
VITE_USE_WEB_WORKERS=true
VITE_ENABLE_GPU_ACCELERATION=true
VITE_MEMORY_LIMIT_MB=1024
VITE_TEXTURE_QUALITY=high

# Processing limits
VITE_MAX_PROCESSING_TIME_MS=5000
VITE_FRAME_RATE_LIMIT=60
VITE_BACKGROUND_PROCESSING=true

# ===================================
# DEVELOPMENT SETTINGS
# ===================================

# Debug mode
VITE_DEBUG_MODE=false
VITE_SHOW_WIREFRAMES=false
VITE_SHOW_MEASUREMENTS=false
VITE_VERBOSE_LOGGING=false

# Development server
PORT=3000
HOST=localhost
HTTPS=true

# ===================================
# OPTIONAL: ADDITIONAL SERVICES
# ===================================

# Computer Vision APIs (Optional enhancement)
# VITE_GOOGLE_VISION_API_KEY=your_google_vision_key
# VITE_AZURE_CV_ENDPOINT=your_azure_cv_endpoint
# VITE_AZURE_CV_KEY=your_azure_cv_key

# 3D Model Services (Optional)
# VITE_SKETCHFAB_API_KEY=your_sketchfab_key
# VITE_READY_PLAYER_ME_API=your_rpm_api_key

# Analytics (Optional)
# VITE_GA_TRACKING_ID=your_google_analytics_id
# VITE_MIXPANEL_TOKEN=your_mixpanel_token

# ===================================
# E-COMMERCE INTEGRATION
# ===================================

# Shopify integration (Optional)
# VITE_SHOPIFY_STORE_URL=your_store.myshopify.com
# VITE_SHOPIFY_STOREFRONT_TOKEN=your_storefront_access_token

# WooCommerce integration (Optional)
# VITE_WOOCOMMERCE_URL=https://your-store.com
# VITE_WOOCOMMERCE_CONSUMER_KEY=your_consumer_key
# VITE_WOOCOMMERCE_CONSUMER_SECRET=your_consumer_secret

# ===================================
# PRIVACY & SECURITY
# ===================================

# Privacy settings
VITE_LOCAL_PROCESSING_ONLY=true
VITE_NO_DATA_STORAGE=true
VITE_ANONYMOUS_USAGE=true

# Security settings
VITE_ENABLE_CORS=true
VITE_SECURE_CONNECTIONS_ONLY=true

# ===================================
# SETUP INSTRUCTIONS
# ===================================
#
# 1. Copy this file to .env.local (not .env!)
# 2. Get your Gemini API key from https://ai.google.dev/
# 3. Replace 'your_gemini_api_key_here' with your actual key
# 4. Enable HTTPS for camera and AR features (set HTTPS=true)
# 5. Restart the development server after making changes
# 6. Grant camera and motion sensor permissions when prompted
# 7. Never commit .env.local to version control!
#
# Requirements:
# - Modern browser with WebXR support
# - HTTPS environment (required for camera access)
# - Camera and motion sensor permissions
# - WebGL 2.0 support for optimal performance
#
# Note: This app requires HTTPS for camera and AR functionality
# Use: npm run dev:https or configure your dev server for HTTPS
#